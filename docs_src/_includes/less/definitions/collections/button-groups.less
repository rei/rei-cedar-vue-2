////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//            THEME
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

@type    : 'collection';
@element : 'button-groups';

@import (multiple) '../../theme.config';

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Button groups
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Make the div behave like a button
.btn-group,
.btn-group-vertical {
    position: relative;
    display: inline;
    @media( min-width: @screen-sm-min ) {
        display: inline-block;
    }
    vertical-align: middle; // match .btn alignment given font-size hack above
    > .btn {
        position: relative;
        float: left;
        // Bring the "active" button to the front
        &:hover,
        &:focus,
        &:active,
        &.active {
            z-index: 2;
        }
    }
}

// Prevent double borders when buttons are next to each other
.btn-group {
    .btn + .btn,
    .btn + .btn-group,
    .btn-group + .btn,
    .btn-group + .btn-group {
        margin-left: -0.1rem;
    }
}

// Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match
.btn-group > .btn:first-child {
    margin-left: 0;
}

// Custom edits for including btn-groups within btn-groups (useful for including dropdown buttons within a btn-group)
.btn-group > .btn-group {
    float: left;
}

// Sizing
//
// Remix the default button sizing classes into new ones for easier manipulation.
.btn-group-xs > .btn { &:extend(.btn-xs); }
.btn-group-sm > .btn { &:extend(.btn-sm); }
.btn-group-lg > .btn { &:extend(.btn-lg); }



// Vertical button groups
// ----------------------

.btn-group-vertical {
    > .btn,
    > .btn-group,
    > .btn-group > .btn {
        display: block;
        float: none;
        width: 100%;
        max-width: 100%;
    }

    // Clear floats so dropdown menus can be properly placed
    > .btn-group {
        &:extend(.clearfix all);
        > .btn {
            float: none;
        }
    }

    > .btn + .btn,
    > .btn + .btn-group,
    > .btn-group + .btn,
    > .btn-group + .btn-group {
        margin-top: -0.1rem;
        margin-left: 0;
    }
}




// Justified button groups
// ----------------------

.btn-group-justified {
    display: table;
    width: 100%;
    table-layout: fixed;
    border-collapse: separate;
    > .btn,
    > .btn-group {
        float: none;
        display: table-cell;
        width: 1%;
    }
    > .btn-group .btn {
        width: 100%;
    }
}


// Checkbox and radio options
//
// In order to support the browser's form validation feedback, powered by the
// `required` attribute, we have to "hide" the inputs via `clip`. We cannot use
// `display: none;` or `visibility: hidden;` as that also hides the popover.
// Simply visually hiding the inputs via `opacity` would leave them clickable in
// certain cases which is prevented by using `clip` and `pointer-events`.
// This way, we ensure a DOM element is visible to position the popover from.
//
// See https://github.com/twbs/bootstrap/pull/12794 and
// https://github.com/twbs/bootstrap/pull/14559 for more information.

[data-toggle="buttons"] {
    > .btn,
    > .btn-group > .btn {
        input[type="radio"],
        input[type="checkbox"] {
            position: absolute;
            clip: rect(0, 0, 0, 0);
            pointer-events: none;
        }
    }
}

.inline-group.btn-group {
    &.center-block {
        & .btn {
            &:extend( .center-block );
        }
    }
    @media( min-width: @screen-sm-min ) {
        &:not(.inline-group-fixed) {}
        margin: 0 -( @group-push / 2 );
    }
    .btn {
        margin: 0 0 2rem;
        float: left;
        &.btn-fixed {
            margin: 0 ( @group-push / 2 ) 2rem;
        }
        @media( min-width: @screen-sm-min ) {
            margin: 0 ( @group-push / 2 ) 2rem;
            float: none;
        }
    }
    &.ig-sm.btn-group {
        & .btn {
            &.btn-fixed {
                margin: 0 ( @group-push / 2 ) 1rem;
            }
            @media( min-width: @screen-sm-min ) {
                margin: 0 ( @group-push / 2 ) 1rem;
            }
        }
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//            OVERRIDES
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
.loadUIOverrides();
