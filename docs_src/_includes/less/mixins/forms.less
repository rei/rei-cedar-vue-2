/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Form
//
// TOC:
//
// :Checkbox and Radio Theme
// :Checkbox and Radio Toggle Placement
// :Control Sizing
// :Focus State
//: Validation States
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Checkbox and Radio Theme
//
// Updates border and fill. Used to account for containers which have background colors or images.
// (See scaffolding.less)
//
//----------------------------------------------------------------------------------------------------------------------
.checkbox-radio-color-variant( @background-container-color; @label-color: @core-architectural-5; @primary-color: @core-architectural-5; ) {
    .radio,
    .input-group-addon,
    .checkbox {
        & > [type="radio"] + label,
        & > [type="checkbox"] + label {
            color: @label-color;
            &:before {
                border-color: @background-container-color;
                box-shadow: 0 0 0 0.1rem @primary-color;
            }
        }
        & > [type="radio"]:checked + label:before,
        & > [type="checkbox"]:checked + label:before  {
            background: @primary-color;
        }
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Checkbox or Radio Toggle Placement
//
// Allows you to set the parent to relative and to position a checkbox absolutely. Used to place toggle navigation on
// list groups
//
//----------------------------------------------------------------------------------------------------------------------
.place-toggle-variant
(
    @icon-size: @font-size-icon;
    @place-top: auto;
    @place-right: auto;
    @place-bottom: auto;
    @place-left: auto;
    @color: inherit;
    @color-active: inherit;
) {
    position: relative;
    & > [type="checkbox"] + label:before,
    & > [type="radio"] + label:before {
        bottom: @place-bottom;
        color: @color;
        display: block;
        font-size: @icon-size;
        left: @place-left;
        position: absolute;
        right: @place-right;
        top: @place-top;
    }
    &.checkbox {
        margin: 0;
    }

    & > [type="checkbox"]:checked + label:before,
    & > [type="radio"]:checked + label:before {
        color: @color-active;
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Control Sizing
//
// Relative text size, padding, and border-radii changes for form controls. For
// horizontal sizing, wrap controls in the predefined grid classes. `<select>`
// element gets special love because it's special, and that's a fact!
//
//----------------------------------------------------------------------------------------------------------------------
.input-size(
    @padding: @inset-sm--stretch;
    @font-size: @input-font-size;
    @line-height: @input-line-height;
    @font-family: @input-font-family;
    @font-style: @input-font-style;
    @font-spacing: @input-font-spacing;
    @height: @input-height-base; ) {
      font-family: @font-family;
      font-size: @font-size;
      font-style: @font-style;
      line-height: @line-height;
      letter-spacing: @input-font-spacing;
      padding: @padding;
    > .icon {
      font-size: @font-size !important;
    }
  select& {
    height: @input-height-base;
    padding: 0;
  }

  textarea&,
  select[multiple]& {
    height: auto;

  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Focus State
//
// Shared by buttons, text fields, and text-areas
// disables outline and sets the focus color for form elements
//
//----------------------------------------------------------------------------------------------------------------------
.rei-form-control-focus(@color: @input-border-focus) {
    &:active {
        border-color: @color;
        outline: none;
    }
    &:focus{
        border: 0.1rem solid @color;
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Validation States
//
// Used in forms.less to generate the form validation CSS for warnings, errors,
// and successes.
// TODO: look to refactor into alert
//
//----------------------------------------------------------------------------------------------------------------------
.form-control-validation(@color: @input-color; @border-color: @input-border; @background-color: @input-group-addon-bg; ) {
    // Color the label and help text
    .help-block,
        //.control-label,
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline,
    &.radio label,
    &.checkbox label,
    &.radio-inline label,
    &.checkbox-inline label  {
        color: @color;
    }
    // Set the border and box shadow on specific inputs to match
    .form-control {
        border-color: @border-color;
    }
    // Set validation states also for addons
    .input-group-addon {
        color: @color;
        border-color: @border-color;
    }
    // Optional feedback icon
    .form-control-feedback {
        color: @color;
    }
}
