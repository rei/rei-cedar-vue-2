////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Grid System
// Generate semantic grid columns with these mixins.
// TOC:
//
// :Container
// :Row
// :Extra Small Columns
// ::Generate
// ::Manipulate
// :::Offset
// :::Push
// :::Pull
// :Small Columns
// ::Generate
// ::Manipulate
// :::Offset
// :::Push
// :::Pull
// :Medium Columns
// ::Generate
// ::Manipulate
// :::Offset
// :::Push
// :::Pull
// :Large Columns
// ::Generate
// ::Manipulate
// :::Offset
// :::Push
// :::Pull

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Container
//
// Centered container element
//
//----------------------------------------------------------------------------------------------------------------------
.container-fixed( @gutter: @grid-gutter-width; ) {
    max-width: @screen-lg;
    margin-right: auto;
    margin-left: auto;
    padding-left:  (@gutter / 2);
    padding-right: (@gutter / 2);

}
.container-fluid( @gutter: @grid-gutter-width; ) {
    width: 100%;
    padding-left:  (@gutter / 2);
    padding-right: (@gutter / 2);

    &  > .row {
        .make-row();
    }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Row
//
// Creates a wrapper for a series of columns
//
//----------------------------------------------------------------------------------------------------------------------
.make-row( @gutter: @grid-gutter-width; @gutter-sm: @grid-gutter-width-sm; @gutter-md: @grid-gutter-width-md; ) {
    margin-left:  (@gutter/ -2);
    margin-right: (@gutter/ -2);
    @media( min-width: @screen-sm-min ) {
        margin-left:  (@gutter-sm / -2);
        margin-right: (@gutter-sm / -2);
    }
    @media( min-width: @screen-md-min ) {
        margin-left:  (@gutter-md / -2);
        margin-right: (@gutter-md / -2);
    }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Extra Small Columns
//
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// Generate
//----------------------------------------------------------------------------------------------------------------------
.make-xs-column( @columns; @gutter: @grid-gutter-width; @gutter-sm: @grid-gutter-width-sm; @gutter-md: @grid-gutter-width-md ) {
    width: percentage( ( @columns / @grid-columns ) );
    min-width: percentage( ( @columns / @grid-columns ) );
    padding-left:  ( @gutter / 2 );
    padding-right: ( @gutter / 2 );
    @media( min-width: @screen-sm-min ) {
        padding-left:  ( @gutter-sm / 2 );
        padding-right: ( @gutter-sm / 2 );
    }
    @media( min-width: @screen-md-min ) {
        padding-left:  ( @gutter-md / 2 );
        padding-right: ( @gutter-md / 2 );
    }
}
//----------------------------------------------------------------------------------------------------------------------
// Manipulate
//----------------------------------------------------------------------------------------------------------------------
.make-xs-column-offset( @columns ) {
    margin-left: percentage( ( @columns / @grid-columns ) );
}
.make-xs-column-push( @columns ) {
    left: percentage( ( @columns / @grid-columns ) );
}
.make-xs-column-pull( @columns ) {
    right: percentage( ( @columns / @grid-columns ) );
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Small Columns
//
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// Generate
//----------------------------------------------------------------------------------------------------------------------
.make-sm-column( @columns; @gutter: @grid-gutter-width; @gutter-sm: @grid-gutter-width-sm; @gutter-md: @grid-gutter-width-md ) {
    // Inner gutter via padding
    padding-left:  ( @gutter / 2 );
    padding-right: ( @gutter / 2 );
    @media( min-width: @screen-sm-min ) {
        padding-left:  ( @gutter-sm / 2 );
        padding-right: ( @gutter-sm / 2 );
    }
    @media( min-width: @screen-md-min ) {
        padding-left:  ( @gutter-md / 2 );
        padding-right: ( @gutter-md / 2 );
    }
    // Calculate width based on number of columns available
    @media ( min-width: @screen-sm-min ) {
        width: percentage( ( @columns / @grid-columns ) );
        min-width: percentage( ( @columns / @grid-columns ) );
    }
}
//----------------------------------------------------------------------------------------------------------------------
// Manipulate
//----------------------------------------------------------------------------------------------------------------------
.make-sm-column-offset( @columns ) {
    @media ( min-width: @screen-sm-min ) {
        margin-left: percentage( ( @columns / @grid-columns ) );
    }
}
.make-sm-column-push( @columns ) {
    @media ( min-width: @screen-sm-min ) {
        left: percentage( ( @columns / @grid-columns ) );
    }
}
.make-sm-column-pull( @columns ) {
    @media ( min-width: @screen-sm-min ) {
        right: percentage( ( @columns / @grid-columns ) );
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Medium Columns
//
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// Generate
//----------------------------------------------------------------------------------------------------------------------
.make-md-column( @columns; @gutter: @grid-gutter-width; @gutter-sm: @grid-gutter-width-sm; @gutter-md: @grid-gutter-width-md ) {
    padding-left:  ( @gutter / 2 );
    padding-right: ( @gutter / 2 );
    @media( min-width: @screen-sm-min ) {
        padding-left:  ( @gutter-sm / 2 );
        padding-right: ( @gutter-sm / 2 );
    }
    @media( min-width: @screen-md-min ) {
        padding-left:  ( @gutter-md / 2 );
        padding-right: ( @gutter-md / 2 );
    }
    // Calculate width based on number of columns available
    @media ( min-width: @screen-md-min ) {
        width: percentage( ( @columns / @grid-columns ) );
        min-width: percentage( ( @columns / @grid-columns ) );
    }
}
//----------------------------------------------------------------------------------------------------------------------
// Manipulate
//----------------------------------------------------------------------------------------------------------------------
.make-md-column-offset( @columns ) {
    @media ( min-width: @screen-md-min ) {
        margin-left: percentage( ( @columns / @grid-columns ) );
    }
}
.make-md-column-push( @columns ) {
    @media ( min-width: @screen-md-min ) {
        left: percentage( ( @columns / @grid-columns ) );
    }
}
.make-md-column-pull( @columns ) {
    @media ( min-width: @screen-md-min ) {
        right: percentage( ( @columns / @grid-columns ) );
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Large Columns
//
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
// Generate
//----------------------------------------------------------------------------------------------------------------------
.make-lg-column( @columns; @gutter: @grid-gutter-width; @gutter-sm: @grid-gutter-width-sm; @gutter-md: @grid-gutter-width-md ) {
    padding-left:  ( @gutter / 2 );
    padding-right: ( @gutter / 2 );
    @media( min-width: @screen-sm-min ) {
        padding-left:  ( @gutter-sm / 2 );
        padding-right: ( @gutter-sm / 2 );
    }
    @media( min-width: @screen-md-min ) {
        padding-left:  ( @gutter-md / 2 );
        padding-right: ( @gutter-md / 2 );
    }
    // Calculate width based on number of columns available
    @media ( min-width: @screen-lg-min ) {
        width: percentage( ( @columns / @grid-columns ) );
        min-width: percentage( ( @columns / @grid-columns ) );
    }
}
//----------------------------------------------------------------------------------------------------------------------
// Manipulate
//----------------------------------------------------------------------------------------------------------------------
.make-lg-column-offset( @columns ) {
    @media ( min-width: @screen-lg-min ) {
        margin-left: percentage( ( @columns / @grid-columns ) );
    }
}
.make-lg-column-push( @columns ) {
    @media ( min-width: @screen-lg-min ) {
        left: percentage( ( @columns / @grid-columns ) );
    }
}
.make-lg-column-pull( @columns ) {
    @media ( min-width: @screen-lg-min ) {
        right: percentage( ( @columns / @grid-columns ) );
    }
}
