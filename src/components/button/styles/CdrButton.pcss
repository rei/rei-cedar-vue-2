/* ==========================================================================
  # CdrButton
  
  All values should map to variables in
  vars/CdrButton.vars.pcss
  in order to allow for theming

  TOC:

    :Base Styles
      :States
    :Modifiers
      :Style variants
        :Secondary
      :Size variants
        :lg
        :sm
        :block
========================================================================== */

.cdr-button {
  @include redwood-display-30;

  background-color: $button-background-color;
  box-shadow: $button-box-shadow;
  border: none;
  border-radius: $button-border-radius;
  color: $button-color;
  cursor: pointer;
  display: inline-block;
  outline: none;
  padding: $inset-1-x-squish;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;

  & > :global(&__icon) {
    display: block;
    float: left;
    fill: $button-color;
    margin-right: $space-quarter-x;
  }

  /* States
    ---------- */

  &:hover,
  &:active {
    background-color: $button-hover-background-color;
    color: $button-hover-color;
    box-shadow: $button-hover-box-shadow;
    text-decoration: none;
    outline: none;

    & > :global(&__icon) {
      fill: $button-hover-color;
    }
  }

  &[disabled] {
    background-color: $button-disabled-background-color;
    box-shadow: $button-disabled-box-shadow;
    color: $button-disabled-color;
    cursor: not-allowed;
  }

  /* Modifier style variants
    ========================================================================== */
    
  /* Secondary
     ========== */

  &--secondary {
    background-color: $button-secondary-background-color;
    box-shadow: $button-secondary-box-shadow;
    color: $button-secondary-color;

    & > :global(.cdr-button__icon) {
      fill: $button-secondary-color;
    }

    /* States
    ---------- */

    &:hover,
    &:active {
      background-color: $button-secondary-hover-background-color;
      box-shadow: $button-secondary-box-shadow;
      color: $button-secondary-hover-color;

      & > :global(.cdr-button__icon) {
        fill: $button-secondary-hover-color;
      }
    }

    &[disabled] {
      background-color: $button-secondary-disabled-background-color;
      box-shadow: $button-secondary-disabled-box-shadow;
      color: $button-secondary-disabled-color;
      cursor: not-allowed;

      & > :global(.cdr-button__icon) {
        fill: $button-secondary-disabled-color;
      }
    }
  }

  /* Large
     ========== */
  &--large {
    @include redwood-display-40;

    padding: $inset-1-and-a-half-x-squish;
  }

  /* Medium
     ========== */
  &--medium {
    @include redwood-display-30;

    padding: $inset-1-x-squish;
  }

  /* Small
     ========== */
  &--small {
    @include redwood-display-20;

    padding: $inset-three-quarter-x-squish;

    & > :global(.cdr-button__icon) {
      /* This is to correct icon size vs line height */
      @include small-button-icon();
    }
  }

  /* Full Width
     ========== */
  &--full-width {
    width: 100%;

    & > :global(.cdr-button__icon) {
      display: inline-block;
      float: none;
      position: relative;
      bottom: 1px; /* This is to fix the extra pixel added when svg is inline-block */
    }
  }

  /* Breakpoint variants
    ========================================================================== */

  @mixin auto-icon() {
    width: $icon-size;
    height: $icon-size;
  }

  @mixin small-button-icon() {
    width: 20px;
    height: 20px;
  }

  /* @extra-small
    0px - 767px
    ========== */
  @media (--xs-mq-only) {
    &--small\@xs {
      @include redwood-display-20;

      padding: $inset-three-quarter-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include small-button-icon();
      }
    }

    &--medium\@xs {
      @include redwood-display-30;

      padding: $inset-1-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include auto-icon();
      }
    }

    &--large\@xs {
      @include redwood-display-40;

      padding: $inset-1-and-a-half-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include auto-icon();
      }
    }
  }

  /* @small
    768px - 991px
    ========== */
  @media (--sm-mq-only) {
    &--small\@sm {
      @include redwood-display-20;

      padding: $inset-three-quarter-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include small-button-icon();
      }
    }

    &--medium\@sm {
      @include redwood-display-30;

      padding: $inset-1-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include auto-icon();
      }
    }

    &--large\@sm {
      @include redwood-display-40;

      padding: $inset-1-and-a-half-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include auto-icon();
      }
    }
  }

  /* @medium
    992px - 1199px
    ========== */
  @media (--md-mq-only) {
    &--small\@md {
      @include redwood-display-20;

      padding: $inset-three-quarter-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include small-button-icon();
      }
    }

    &--medium\@md {
      @include redwood-display-30;

      padding: $inset-1-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include auto-icon();
      }
    }

    &--large\@md {
      @include redwood-display-40;

      padding: $inset-1-and-a-half-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include auto-icon();
      }
    }
  }

  /* @large
    1200px and up
    ========== */
  
  @media (--lg-mq-only) {
    &--small\@lg {
      @include redwood-display-20;

      padding: $inset-three-quarter-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include small-button-icon();
      }
    }

    &--medium\@lg {
      @include redwood-display-30;

      padding: $inset-1-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include auto-icon();
      }
    }

    &--large\@lg {
      @include redwood-display-40;

      padding: $inset-1-and-a-half-x-squish;
      width: auto;

      & > :global(.cdr-button__icon) {
        @include auto-icon();
      }
    }
  }
}
