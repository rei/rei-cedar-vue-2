//
// Responsive: Utility classes
// --------------------------------------------------


// IE10 in Windows (Phone) 8
//
// Support for responsive views via media queries is kind of borked in IE10, for
// Surface/desktop in split view and for Windows Phone 8. This particular fix
// must be accompanied by a snippet of JavaScript to sniff the user agent and
// apply some conditional CSS to *only* the Surface/desktop Windows 8. Look at
// our Getting Started page for more information on this bug.
//
// For more information, see the following:
//
// Issue: https://github.com/twbs/bootstrap/issues/10497
// Docs: http://getbootstrap.com/getting-started/#support-ie10-width
// Source: http://timkadlec.com/2013/01/windows-phone-8-and-device-width/
// Source: http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/

@-ms-viewport {
  width: device-width;
}

// Visibility utilities
// Note: Deprecated .visible-xs, .visible-sm, .visible-md, and .visible-lg as of v3.2.0
.visible {
  &-xs,
  &-sm,
  &-md,
  &-lg {
    .responsive-invisibility();

    &-block,
    &-inline,
    &-inline-block {
      display: none !important;
    }
  }

  &-xs {
    @media (max-width: @screen-xs-max) {
      .responsive-visibility();
      &-block {
        display: block !important;
      }
      &-inline {
        display: inline !important;
      }
      &-inline-block {
        display: inline-block !important;
      }
    }
  }

  &-sm {
    @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
      .responsive-visibility();
      &-block {
          display: block !important;
      }
      &-inline {
          display: inline !important;
      }
      &-inline-block {
          display: inline-block !important;
      }
    }
  }

  &-md {
    @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
      .responsive-visibility();
      &-block {
        display: block !important;
      }
      &-inline {
        display: inline !important;
      }
      &-inline-block {
        display: inline-block !important;
      }
    }
  }

  &-lg {
    @media (min-width: @screen-lg-min) {
      .responsive-visibility();
      &-block {
          display: block !important;
      }
      &-inline {
          display: inline !important;
      }
      &-inline-block {
          display: inline-block !important;
      }
    }
  }

  // Print utilities
  //
  // Media queries are placed on the inside to be mixin-friendly.

  // Note: Deprecated .visible-print as of v3.2.0
  &-print {
    .responsive-invisibility();
    @media print {
      .responsive-visibility();
    }
    &-block {
      display: none !important;
      @media print {
        display: block !important;
      }
    }
    &-inline {
      display: none !important;
      @media print {
        display: inline !important;
      }
    }
    &-inline-block {
      display: none !important;
      @media print {
        display: inline-block !important;
      }
    }
  }
}

.hidden {
  &-xs {
    @media (max-width: @screen-xs-max) {
      .responsive-invisibility();
    }
  }
  &-sm {
    @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
      .responsive-invisibility();
    }
  }
  &-md {
    @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
      .responsive-invisibility();
    }
  }
  &-lg {
    @media (min-width: @screen-lg-min) {
      .responsive-invisibility();
    }
  }
  &-print {
    @media print {
      .responsive-invisibility();
    }
  }
}
